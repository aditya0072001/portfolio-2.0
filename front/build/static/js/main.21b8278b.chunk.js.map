{"version":3,"sources":["components/profile.js","components/header.js","components/project.js","App.js","serviceWorker.js","index.js"],"names":["Profile","class","href","src","alt","React","Component","Header","Project","target","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uTAyDeA,G,6KApDT,OAAO,yBAAKC,MAAM,WAClB,6BACA,yBAAKA,MAAM,QACX,yCAEA,uBAAGC,KAAK,IAAID,MAAM,SAChB,kCACE,yBAAKE,IAAI,wfAAwfC,IAAI,SACvgB,yBAAKH,MAAM,aACT,uBAAGA,MAAM,WAGb,yBAAKA,MAAM,WACX,yBAAKA,MAAM,sBACT,uBAAGA,MAAM,4BAAT,OAIA,wBAAIA,MAAM,4BACR,wBAAIA,MAAM,kCAAV,gBACA,wBAAIA,MAAM,kCAAV,iBACA,wBAAIA,MAAM,kCAAV,oBACA,wBAAIA,MAAM,kCAAV,eAIN,6BACA,yBAAKA,MAAM,UACP,yBAAKA,MAAM,SACP,8CACA,yBAAKA,MAAM,6CACP,0BAAMA,MAAM,gBAAZ,SAGR,yBAAKA,MAAM,SACP,2CACA,yBAAKA,MAAM,6CACN,0BAAMA,MAAM,gBAAZ,SAGT,yBAAKA,MAAM,SACP,kDACA,yBAAKA,MAAM,6CACP,0BAAMA,MAAM,gBAAZ,UAIZ,kC,GAjDkBI,IAAMC,YCObC,G,6KANT,OAAO,yBAAKN,MAAM,cAClB,+D,GAHeI,IAAMC,YCaZE,G,6KAXT,OAAO,6BACP,uBAAGN,KAAK,qFAAqFD,MAAM,kBAAnG,UACA,6BACA,yBAAKA,MAAM,MACT,yBAAKA,MAAM,iBAAgB,uBAAGC,KAAK,iEAAiEO,OAAO,YAC3G,yBAAKR,MAAM,eAAc,uBAAGC,KAAK,mCAAmCO,OAAO,kB,GAP7DJ,IAAMC,YCiBbI,MAZf,WACE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,OAEF,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.21b8278b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './profile.css';\r\n\r\nclass Profile extends React.Component {\r\n    render() {\r\n      return <div class=\"corners\">\r\n      <br/>\r\n      <div class=\"face\">\r\n      <h2>About me</h2>\r\n      </div>\r\n      <a href=\"#\" class=\"photo\">\r\n        <he>Me</he>\r\n          <img src=\"https://previews.dropbox.com/p/thumb/AAy6HMkm9QcBFn1m3Mhs43fEAzBeps8-ing1CsHL_7HbqQ0abOco0i3zCanEL9KpvrPsGy7g3Yp4xVsulEVQLBmy1lxSb5aQbpNFdUnw0BQUF595NwB9GVPqsfAd4O-xGa2JC2SC1Ntq0ww7twaqQNIg62wFLSFiCc9E5CtgdOOunQbZoy9mqOPUE69AYDloB1BdM26LoZdT0Bd2rD6F6LNVqYctRFYG8RtoI0wTMpDwOFogQStbZjnQvSYus3nUEr7hE5Y5563E3O4L2mvhByohyj6JV7caq3Dw2AbuSFS_PeLh0gmDiJCzX_SIpwB9VeH-FCtKWBcumSJbKjz7pqZ1ZJY24IXYP_wpakmMB0K378wVoVbg4QD_Ayh9s4lcC5E5s5EJIl1FxTnjrbeFJQ3Wqm5AmGXitAKZ3TLe4XBSOw/p.jpeg?size=2048x1536&size_mode=3\" alt=\"opps\"/>\r\n        <div class=\"glow-wrap\">\r\n          <i class=\"glow\"></i>\r\n        </div>\r\n      </a>\r\n      <div class=\"content\">\r\n      <div class=\"content__container\">\r\n        <p class=\"content__container__text\">\r\n        I'm \r\n        </p>\r\n        \r\n        <ul class=\"content__container__list\">\r\n          <li class=\"content__container__list__item\">WebDeveloper</li>\r\n          <li class=\"content__container__list__item\">DataScientist</li>\r\n          <li class=\"content__container__list__item\">AndroidDeveloper</li>\r\n          <li class=\"content__container__list__item\">Sketcher</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <br/>\r\n    <div class=\"skills\">\r\n        <div class=\"skill\">\r\n            <p>WEB DEVELOPMENT</p>\r\n            <div class=\"skill-bar skill1 wow slideInLeft animated\">\r\n                <span class=\"skill-count1\">95%</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"skill\">\r\n            <p>DATA SCIENCE</p>\r\n            <div class=\"skill-bar skill2 wow slideInLeft animated\">\r\n                 <span class=\"skill-count2\">85%</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"skill\">\r\n            <p>ANDROID-DEVELOPMENT</p>\r\n            <div class=\"skill-bar skill3 wow slideInLeft animated\">\r\n                <span class=\"skill-count3\">80%</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br></br>\r\n   </div>\r\n    }\r\n  }\r\n\r\nexport default Profile;","import React from 'react';\r\nimport './header.css';\r\nclass Header extends React.Component {\r\n    render() {\r\n      return <div class=\"typewriter\">\r\n      <h1>Hi,welcome to my portfolio</h1>\r\n    </div>\r\n    }\r\n  }\r\n\r\nexport default Header;","import React from 'react';\r\nimport './project.css';\r\nclass Project extends React.Component {\r\n    render() {\r\n      return <div>\r\n      <a href=\"https://drive.google.com/file/d/1zZ2w-Jujwz5TQsXFEh8CsRtRoq4kJTHD/view?usp=sharing\" class=\"buttonDownload\">Resume</a>\r\n      <br/>\r\n      <div class=\"wr\">\r\n        <div class=\"linkedin icon\"><a href=\"https://www.linkedin.com/in/tripathi-aditya-prakash-95316b191/\" target=\"_blank\"></a></div>\r\n        <div class=\"github icon\"><a href=\"https://github.com/aditya0072001\" target=\"_blank\"></a></div>\r\n      </div>\r\n    </div>\r\n    }\r\n  }\r\n\r\nexport default Project;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Profile from './components/profile.js'\nimport Header from './components/header.js'\nimport Project from './components/project';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header></Header>\n      </header>\n      <Profile></Profile>\n      <Project></Project>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}